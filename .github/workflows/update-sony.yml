- name: Update sony.m3u tokens
        run: |
          python - <<'PY'
          import re, requests, os
          from datetime import datetime

          API_URL = "https://billatv.pages.dev/slivbyfreelivtv"
          LOCAL_FILE = "sony.m3u"

          def parse_m3u(content):
              """Parse M3U into list of entries with tvg-id, name, header, and url."""
              entries = []
              lines = content.splitlines()
              for i, line in enumerate(lines):
                  if line.startswith("#EXTINF"):
                      header = line.strip()
                      if i + 1 < len(lines):
                          url = lines[i + 1].strip()
                          tvg_id = re.search(r'tvg-id="([^"]+)"', header)
                          tvg_name = re.search(r'tvg-name="([^"]+)"', header)
                          name = tvg_name.group(1).lower() if tvg_name else ""
                          entries.append({
                              "id": (tvg_id.group(1).lower() if tvg_id else ""),
                              "name": name.replace(" ", "").replace("-", ""),
                              "header": header,
                              "url": url
                          })
              return entries

          print("🔄 Fetching latest playlist...")
          resp = requests.get(API_URL, timeout=30)
          resp.raise_for_status()
          new_data = resp.text.strip()

          new_entries = parse_m3u(new_data)
          sony_new = [e for e in new_entries if "sony" in e["id"] or "sony" in e["name"]]
          print(f"✅ Found {len(sony_new)} Sony channels in API.")

          if not os.path.exists(LOCAL_FILE):
              print("⚠️ sony.m3u not found — creating new one.")
              lines = ["#EXTM3U", f"# Created: {datetime.utcnow().isoformat()} UTC", ""]
              for e in sony_new:
                  lines += [e["header"], e["url"]]
              with open(LOCAL_FILE, "w", encoding="utf-8") as f:
                  f.write("\n".join(lines))
              exit(0)

          with open(LOCAL_FILE, "r", encoding="utf-8") as f:
              old_data = f.read()

          old_entries = parse_m3u(old_data)
          updated_lines = ["#EXTM3U", f"# Updated: {datetime.utcnow().isoformat()} UTC", ""]
          updated_count = 0
          added_count = 0

          # Convert new entries to dict for faster lookup by name/id
          def find_match(old):
              for new in sony_new:
                  if (
                      old["id"] == new["id"]
                      or old["name"] == new["name"]
                      or (old["name"] in new["name"] or new["name"] in old["name"])
                  ):
                      return new
              return None

          for old in old_entries:
              match = find_match(old)
              if match:
                  if match["url"].strip("?") != old["url"].strip("?"):
                      updated_count += 1
                      print(f"🔁 Updated: {old['id'] or old['name']}")
                  updated_lines.append(match["header"])
                  updated_lines.append(match["url"])
              else:
                  updated_lines.append(old["header"])
                  updated_lines.append(old["url"])

          # Add new sony channels not present
          old_names = [o["name"] for o in old_entries]
          for new in sony_new:
              if not any(n == new["name"] for n in old_names):
                  updated_lines.append(new["header"])
                  updated_lines.append(new["url"])
                  added_count += 1
                  print(f"🆕 Added: {new['id']}")

          with open(LOCAL_FILE, "w", encoding="utf-8") as f:
              f.write("\n".join(updated_lines))

          print(f"🎉 sony.m3u updated successfully: {updated_count} updated, {added_count} added.")
          PY
